// Copyright 2021 Nash Muhandes
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. The name of the author may not be used to endorse or promote products
//    derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
// IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
// OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//===========================================================================
//
// StrifeCoopLevelPostProcessor
//
//===========================================================================

class StrifeCoopLevelPostProcessor : LevelPostProcessor
{
	protected void Apply(Name checksum, String mapname)
	{
		bool isCoop = (multiplayer && !deathmatch);
		if (!isCoop) return;
		RemoveUnwantedThings(checksum, mapname);
		FixMapStuff(checksum, mapname);
		FixExitLines(checksum, mapname);
		//FixMapStuffVE(checksum, mapname);
    }

	//===========================================================================
	//
	// Removed Unwanted Things
	//
	//===========================================================================

	void RemoveUnwantedThings(Name checksum, String mapname)
	{
		for (int t = 0; t < GetThingCount(); t++)
		{
			int ednum = GetThingEdNum(t);


			// remove horribly unbalanced items meant for deathmatch
			int thingFlags = GetThingFlags(t);
			if (thingFlags & MTF_SINGLE)
			{
				SetThingFlags(t, thingFlags | (MTF_SINGLE | MTF_DEATHMATCH | MTF_COOPERATIVE));
			}
			else
			{
				SetThingFlags(t, thingFlags & ~(MTF_SINGLE | MTF_DEATHMATCH | MTF_COOPERATIVE));
			}

			bool isUnwantedThing =
			(
				// exit barrier
				ednum == 69 ||

				// deathmatch starts
				ednum == 11
			);

			// get rid of unwanted things
			if (isUnwantedThing)
			{
				SetThingEdNum(t, 0);
			}
		}
	}

	//===========================================================================
	//
	// Fix Exit Lines
	//
	//===========================================================================

	void FixExitLines(Name checksum, String mapname)
	{
		for (int i = 0; i < Level.Lines.Size(); i++)
		{
			Line ln = Level.Lines[i];

			// Change the walk-over exit lines to block the player, so that the party gathering function can run properly
			if ((ln.activation & SPAC_Cross) && ln.special == ACS_ExecuteAlways && ln.args[2] == 145)
			{
				ln.flags |= Line.ML_BLOCK_PLAYERS;
				ln.activation |= (SPAC_Push | SPAC_UseBack);
				ln.activation &= ~SPAC_Cross;
			}
		}
	}

	//===========================================================================
	//
	// Map-Specific Fixes - Strife: Quest for the Sigil
	//
	//===========================================================================

	void FixMapStuff(Name checksum, String mapname)
	{
		int t;

		switch (checksum)
		{
		default:
		case 'none':
			return;

		case '92DD353943BE589C175FEFC969597950': // strife1.wad map01 - Sanctuary
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// There's an extra player 2 start here, change it to a missing player 4 start
			SetThingEdNum(38, 4);

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(155, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(156, 0, 1);
			SetThingArgument(39, 0, 1);
			SetThingArgument(38, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Town drain entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(86, 0);
			t = AddThing(1, (1864, 5664, 0), 0); SetThingArgument(t, 0, 3);
			t = AddThing(2, (1912, 5690, 0), 23); SetThingArgument(t, 0, 3);
			t = AddThing(3, (1967, 5740, 0), 31); SetThingArgument(t, 0, 3);
			t = AddThing(4, (1974, 5690, 0), 35); SetThingArgument(t, 0, 3);

			// Front entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(85, 0);
			t = AddThing(1, (3225, 5185, 0), 90); SetThingArgument(t, 0, 4);
			t = AddThing(2, (3176, 5205, 0), 90); SetThingArgument(t, 0, 4);
			t = AddThing(3, (3270, 5205, 0), 90); SetThingArgument(t, 0, 4);
			t = AddThing(4, (3222, 5227, 0), 90); SetThingArgument(t, 0, 4);

			break;

		case '22DC1F95CD9A03D23467FD638264FFBC': // strife1.wad map02 - Town
			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Power Station entrance
			// (Teleport New Map Spot 1)
			SetThingEdNum(7, 0);
			t = AddThing(1, (-224, 7536, 0), 270); SetThingArgument(t, 0, 1);
			t = AddThing(2, (-288, 7472, 0), 270); SetThingArgument(t, 0, 1);
			t = AddThing(3, (-160, 7472, 0), 270); SetThingArgument(t, 0, 1);
			t = AddThing(4, (224, 7408, 0), 270); SetThingArgument(t, 0, 1);

			// Prison entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(157, 0);
			t = AddThing(1, (-736, 5056, 0), 0); SetThingArgument(t, 0, 2);
			t = AddThing(2, (-696, 5096, 0), 0); SetThingArgument(t, 0, 2);
			t = AddThing(3, (-696, 5016, 0), 0); SetThingArgument(t, 0, 2);
			t = AddThing(4, (-656, 5056, 0), 0); SetThingArgument(t, 0, 2);

			// Front base entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(170, 0);
			t = AddThing(1, (-360, 3600, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(2, (-384, 3640, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(3, (-336, 3640, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(4, (-360, 3680, 0), 90); SetThingArgument(t, 0, 3);

			// Castle entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(8, 0);
			t = AddThing(1, (4632, 4928, 0), 180); SetThingArgument(t, 0, 4);
			t = AddThing(2, (4592, 4880, 0), 180); SetThingArgument(t, 0, 4);
			t = AddThing(3, (4592, 4976, 0), 180); SetThingArgument(t, 0, 4);
			t = AddThing(4, (4576, 4928, 0), 180); SetThingArgument(t, 0, 4);

			// Sewer entrance
			// (Teleport New Map Spot 5)
			SetThingEdNum(9, 0);
			t = AddThing(1, (1155, 2727, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(2, (1101, 2714, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(3, (1022, 2729, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(4, (973, 2712, 0), 180); SetThingArgument(t, 0, 5);

			// Sanctuary back entrance
			// (Teleport New Map Spot 6)
			SetThingEdNum(264, 0);
			t = AddThing(1, (1801, 5997, 0), 296); SetThingArgument(t, 0, 6);
			t = AddThing(2, (1772, 5955, 0), 337); SetThingArgument(t, 0, 6);
			t = AddThing(3, (1825, 5941, 0), 337); SetThingArgument(t, 0, 6);
			t = AddThing(4, (1791, 5901, 0), 347); SetThingArgument(t, 0, 6);

			/*
			// [Entrance Name]
			// (Teleport New Map Spot 7)
			SetThingEdNum(111, 0);
			t = AddThing(1, (666, 666, 0), 180); SetThingArgument(t, 0, 7);
			t = AddThing(2, (666, 666, 0), 180); SetThingArgument(t, 0, 7);
			t = AddThing(3, (666, 666, 0), 180); SetThingArgument(t, 0, 7);
			t = AddThing(4, (666, 666, 0), 180); SetThingArgument(t, 0, 7);
			*/

			// Borderlands entrance
			// (Teleport New Map Spot 8)
			SetThingEdNum(168, 0);
			t = AddThing(1, (4200, 6808, 0), 270); SetThingArgument(t, 0, 8);
			t = AddThing(2, (4160, 6784, 0), 270); SetThingArgument(t, 0, 8);
			t = AddThing(3, (4240, 6784, 0), 270); SetThingArgument(t, 0, 8);
			t = AddThing(4, (4200, 6760, 0), 270); SetThingArgument(t, 0, 8);

			// Sanctuary drain entrance
			// (Teleport New Map Spot 9)
			SetThingEdNum(265, 0);
			t = AddThing(1, (1760, 6224, 0), 180); SetThingArgument(t, 0, 9);
			t = AddThing(2, (1712, 6240, 0), 180); SetThingArgument(t, 0, 9);
			t = AddThing(3, (1664, 6224, 0), 180); SetThingArgument(t, 0, 9);
			t = AddThing(4, (1616, 6240, 0), 180); SetThingArgument(t, 0, 9);

			// Sanctuary front entrance
			// (Teleport New Map Spot 10)
			SetThingEdNum(266, 0);
			t = AddThing(1, (3224, 5672, 0), 270); SetThingArgument(t, 0, 10);
			t = AddThing(2, (3184, 5656, 0), 270); SetThingArgument(t, 0, 10);
			t = AddThing(3, (3264, 5656, 0), 270); SetThingArgument(t, 0, 10);
			t = AddThing(4, (3224, 5632, 0), 270); SetThingArgument(t, 0, 10);

			break;

		case '20C20E1FC803F192613A52A62872BCDE': // strife1.wad map03 - Front Base
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(1, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(12, 0, 1);
			SetThingArgument(13, 0, 1);
			SetThingArgument(14, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Prison teleporter entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(63, 0);
			t = AddThing(1, (488, 1760, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(2, (385, 1758, 0), 90); SetThingArgument(t, 0, 2);
			t = AddThing(3, (306, 1636, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(4, (409, 1854, 0), 90); SetThingArgument(t, 0, 2);

			break;

		case '8AB955C176204FC3DC8008A01BDDEE87': // strife1.wad map04 - Power Station
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// why the shit is there a Player 7 start here lol
			SetThingEdNum(461, 0);

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(23, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(375, 0, 1);
			SetThingArgument(376, 0, 1);
			SetThingArgument(377, 0, 1);

			break;

		case '8DC5B4A41E35089C9789F7EC6393A015': // strife1.wad map05 - Prison
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(357, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(194, 0, 1);
			SetThingArgument(195, 0, 1);
			SetThingArgument(196, 0, 1);

			// Move the player starts behind the first door
			SetThingXY(0, 1062, -737);
			SetThingXY(194, 1041, -697);
			SetThingXY(195, 1039, -778);
			SetThingXY(196, 1024, -738);

			break;

		case 'ED6BA7CD9388DBC9F30363EF24DBACDF': // strife1.wad map06 - Sewers
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(107, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(290, 0, 1);
			SetThingArgument(289, 0, 1);
			SetThingArgument(288, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Castle entrance (stairs to reclamation tank)
			// (Teleport New Map Spot 2)
			SetThingEdNum(109, 0);
			t = AddThing(1, (7200, 1280, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(2, (7136, 1312, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(3, (7264, 1312, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(4, (7200, 1344, 0), 270); SetThingArgument(t, 0, 2);

			// Castle entrance (fall from reclamation tank)
			// (Teleport New Map Spot 3)
			SetThingEdNum(108, 0);
			t = AddThing(1, (7616, 2528, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(2, (7552, 2496, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(3, (7680, 2496, 0), 90); SetThingArgument(t, 0, 3);
			t = AddThing(4, (7616, 2464, 0), 90); SetThingArgument(t, 0, 3);

			// Town entrance (stairs)
			// (Teleport New Map Spot 4)
			SetThingEdNum(110, 0);
			t = AddThing(1, (3648, 1824, 0), 0); SetThingArgument(t, 0, 4);
			t = AddThing(2, (3734, 1831, 0), 247); SetThingArgument(t, 0, 4);
			t = AddThing(3, (3726, 1790, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(4, (3701, 1747, 0), 270); SetThingArgument(t, 0, 4);

			break;

		case '4A79D4C48352804FAB3557EE423ADAFE': // strife1.wad map07 - Castle
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 4 because there are proper player starts already
			SetThingEdNum(84, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 4);
			SetThingArgument(94, 0, 4);
			SetThingArgument(95, 0, 4);
			SetThingArgument(96, 0, 4);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Sewer entrance (stairs)
			// (Teleport New Map Spot 1)
			SetThingEdNum(13, 0);
			t = AddThing(1, (-928, -1072, 0), 90); SetThingArgument(t, 0, 1);
			t = AddThing(2, (-864, -1088, 0), 135); SetThingArgument(t, 0, 1);
			t = AddThing(3, (-832, -1008, 0), 180); SetThingArgument(t, 0, 1);
			t = AddThing(4, (-800, -1056, 0), 180); SetThingArgument(t, 0, 1);

			// Training Facility entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(14, 0);
			t = AddThing(1, (832, -768, 0), 135); SetThingArgument(t, 0, 2);
			t = AddThing(2, (788, -804, 0), 90); SetThingArgument(t, 0, 2);
			t = AddThing(3, (735, -770, 0), 86); SetThingArgument(t, 0, 2);
			t = AddThing(4, (846, -718, 0), 171); SetThingArgument(t, 0, 2);

			// Programmer's Keep entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(15, 0);
			t = AddThing(1, (4120, 960, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(2, (4064, 928, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(3, (4064, 992, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(4, (4016, 960, 0), 180); SetThingArgument(t, 0, 3);

			// Audience Chamber entrance
			// (Teleport New Map Spot 5)
			SetThingEdNum(16, 0);
			t = AddThing(1, (2560, 2336, 0), 225); SetThingArgument(t, 0, 5);
			t = AddThing(2, (2560, 2288, 0), 225); SetThingArgument(t, 0, 5);
			t = AddThing(3, (2512, 2336, 0), 225); SetThingArgument(t, 0, 5);
			t = AddThing(4, (2512, 2288, 0), 225); SetThingArgument(t, 0, 5);

			break;

		case 'D1377FAF42EA65955466169020CE5744': // strife1.wad map08 - Audience Chamber
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 2 because there are proper player starts already
			SetThingEdNum(18, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 2);
			SetThingArgument(56, 0, 2);
			SetThingArgument(57, 0, 2);
			SetThingArgument(58, 0, 2);

			break;

		case '9DA85A8D59EFE7C8B80A0DF6DD9C40AB': // strife1.wad map09 - Castle: Programmer's Keep
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 2 because there are proper player starts already
			SetThingEdNum(72, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(80, 0, 1);
			SetThingArgument(81, 0, 1);
			SetThingArgument(82, 0, 1);

			break;

		case '39C594CAC07EE51C80F757DA465FCC94': // strife1.wad map10 - New Front Base
			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Sewer entrance (stairs)
			// (Teleport New Map Spot 1)
			SetThingEdNum(91, 0);
			t = AddThing(1, (1696, 6032, 0), 90); SetThingArgument(t, 0, 1);
			t = AddThing(2, (1792, 6016, 0), 153); SetThingArgument(t, 0, 1);
			t = AddThing(3, (1813, 6100, 0), 180); SetThingArgument(t, 0, 1);
			t = AddThing(4, (1861, 6048, 0), 180); SetThingArgument(t, 0, 1);

			// Borderlands teleporter
			// (Teleport New Map Spot 2)
			SetThingEdNum(50, 0);
			t = AddThing(1, (5152, 9632, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(2, (5217, 9672, 0), 225); SetThingArgument(t, 0, 2);
			t = AddThing(3, (5219, 9626, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(4, (5263, 9601, 0), 180); SetThingArgument(t, 0, 2);

			// Programmer's Keep (appears to be ruined and no longer accessible so it's kind of pointless?)
			// (Teleport New Map Spot 3)
			SetThingEdNum(96, 0);
			t = AddThing(1, (6552, 8064, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(2, (6552, 8064, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(3, (6552, 8064, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(4, (6552, 8064, 0), 180); SetThingArgument(t, 0, 3);

			// Town entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(64, 0);
			t = AddThing(1, (-296, 9000, 0), 0); SetThingArgument(t, 0, 4);
			t = AddThing(2, (-192, 9056, 0), 0); SetThingArgument(t, 0, 4);
			t = AddThing(3, (-224, 8928, 0), 0); SetThingArgument(t, 0, 4);
			t = AddThing(4, (-160, 8992, 0), 0); SetThingArgument(t, 0, 4);

			break;

		case '28CB8D6614024C51C8DB00C7ADBFD857': // strife1.wad map11 - Borderlands
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(44, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(325, 0, 1);
			SetThingArgument(326, 0, 1);
			SetThingArgument(327, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Temple of the Oracle main entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(26, 0);
			t = AddThing(1, (-1376, 5112, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(2, (-1401, 5075, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(3, (-1353, 5075, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(4, (-1377, 5036, 0), 270); SetThingArgument(t, 0, 2);

			// Temple of the Oracle water entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(41, 0);
			t = AddThing(1, (-1880, 5072, 0), 180); SetThingArgument(t, 0, 3);
			t = AddThing(2, (-1935, 5092, 0), 225); SetThingArgument(t, 0, 3);
			t = AddThing(3, (-1949, 5036, 0), 225); SetThingArgument(t, 0, 3);
			t = AddThing(4, (-1992, 5050, 0), 270); SetThingArgument(t, 0, 3);

			// Temple of the Oracle (inner sanctum) teleporter entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(43, 0);
			t = AddThing(1, (1880, 5072, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(2, (1935, 5092, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(3, (1949, 5036, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(4, (1992, 5050, 0), 270); SetThingArgument(t, 0, 4);

			// Commons entrance
			// (Teleport New Map Spot 5)
			SetThingEdNum(66, 0);
			t = AddThing(1, (2556, 3015, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(2, (2550, 2967, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(3, (2515, 3043, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(4, (2511, 2992, 0), 180); SetThingArgument(t, 0, 5);

			// New Front Base (Macil's HQ) teleporter entrance
			// (Teleport New Map Spot 6)
			SetThingEdNum(68, 0);
			t = AddThing(1, (858, 2560, 0), 180); SetThingArgument(t, 0, 6);
			t = AddThing(2, (800, 2584, 0), 180); SetThingArgument(t, 0, 6);
			t = AddThing(3, (800, 2536, 0), 180); SetThingArgument(t, 0, 6);
			t = AddThing(4, (706, 2562, 0), 180); SetThingArgument(t, 0, 6);

			// The Bailey entrance
			// (Teleport New Map Spot 7)
			SetThingEdNum(111, 0);
			t = AddThing(1, (704, 6880, 0), 270); SetThingArgument(t, 0, 7);
			t = AddThing(2, (768, 6848, 0), 270); SetThingArgument(t, 0, 7);
			t = AddThing(3, (640, 6848, 0), 270); SetThingArgument(t, 0, 7);
			t = AddThing(4, (704, 6816, 0), 270); SetThingArgument(t, 0, 7);

			break;

		case '66375224D5815F4FFCB1AEB9D39DFA8C': // strife1.wad map12 - The Temple of the Oracle
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(95, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(96, 0, 1);
			SetThingArgument(97, 0, 1);
			SetThingArgument(98, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Borderlands water entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(111, 0);
			t = AddThing(1, (1592, 0, 0), 0); SetThingArgument(t, 0, 2);
			t = AddThing(2, (1632, 0, 0), 45); SetThingArgument(t, 0, 2);
			t = AddThing(3, (1672, 24, 0), 90); SetThingArgument(t, 0, 2);
			t = AddThing(4, (1648, 64, 0), 90); SetThingArgument(t, 0, 2);

			// Borderlands teleporter entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(459, 0);
			t = AddThing(1, (-352, 5088, 0), 135); SetThingArgument(t, 0, 3);
			t = AddThing(2, (-400, 4992, 0), 135); SetThingArgument(t, 0, 3);
			t = AddThing(3, (-336, 4992, 0), 135); SetThingArgument(t, 0, 3);
			t = AddThing(4, (-272, 4992, 0), 135); SetThingArgument(t, 0, 3);

			// Proving Grounds teleporter entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(459, 0);
			t = AddThing(1, (-1280, 5440, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(2, (-1360, 5408, 0), 315); SetThingArgument(t, 0, 4);
			t = AddThing(3, (-1200, 5440, 0), 270); SetThingArgument(t, 0, 4);
			t = AddThing(4, (-1296, 5344, 0), 0); SetThingArgument(t, 0, 4);

			break;

		case 'FB1FAC7C198518B892EE6A6CD8113548': // strife1.wad map13 - Catacombs
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(1, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(2, 0, 1);
			SetThingArgument(3, 0, 1);
			SetThingArgument(4, 0, 1);

			// Move the player starts to be on the stairs
			SetThingXY(0, 968, 1096);
			SetThingXY(2, 896, 1062);
			SetThingXY(3, 896, 1120);
			SetThingXY(4, 848, 1093);

			// Make the player starts all face west
			SetThingAngle(0, 180);
			SetThingAngle(2, 180);
			SetThingAngle(3, 180);
			SetThingAngle(4, 180);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Fortress: The Bailey entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(51, 0);
			t = AddThing(1, (-184, 4280, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(2, (-256, 4256, 0), 270); SetThingArgument(t, 0, 2);
			t = AddThing(3, (-160, 4192, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(4, (-224, 4128, 0), 180); SetThingArgument(t, 0, 2);

			// Catacombs: Ruined Temple entrance
			// (Teleport New Map Spot 3)
			SetThingEdNum(94, 0);
			t = AddThing(1, (-1848, -1448, 0), 0); SetThingArgument(t, 0, 3);
			t = AddThing(2, (-1824, -1408, 0), 45); SetThingArgument(t, 0, 3);
			t = AddThing(3, (-1800, -1456, 0), 45); SetThingArgument(t, 0, 3);
			t = AddThing(4, (-1776, -1400, 0), 90); SetThingArgument(t, 0, 3);

			// Factory: Conversion Chapel entrance
			// (Teleport New Map Spot 4)
			SetThingEdNum(117, 0);
			t = AddThing(1, (1368, -1736, 0), 225); SetThingArgument(t, 0, 4);
			t = AddThing(2, (1326, -1750, 0), 225); SetThingArgument(t, 0, 4);
			t = AddThing(3, (1317, -1798, 0), 225); SetThingArgument(t, 0, 4);
			t = AddThing(4, (1278, -1760, 0), 180); SetThingArgument(t, 0, 4);

			// Factory: Manufacturing entrance
			// (Teleport New Map Spot 5)
			SetThingEdNum(120, 0);
			t = AddThing(1, (2416, 912, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(2, (2376, 920, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(3, (2206, 937, 0), 180); SetThingArgument(t, 0, 5);
			t = AddThing(4, (2200, 882, 0), 180); SetThingArgument(t, 0, 5);

			break;

		case 'EFBF3805358AA81DF2251889BFC5DD78': // strife1.wad map14 - Mines
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(2, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);

			// Add missing player starts
			int p = 0;
			p = AddThing(2, (-272, 3664, 0), 270); SetThingArgument(p, 0, 1);
			p = AddThing(3, (-176, 3664, 0), 270); SetThingArgument(p, 0, 1);
			p = AddThing(4, (-224, 3648, 0), 270); SetThingArgument(p, 0, 1);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			//  Factory: Receiving entrance
			// (Teleport New Map Spot 2)
			SetThingEdNum(38, 0);
			t = AddThing(1, (2592, -576, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(2, (2552, -576, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(3, (2552, -616, 0), 180); SetThingArgument(t, 0, 2);
			t = AddThing(4, (2552, -536, 0), 180); SetThingArgument(t, 0, 2);

			break;

		case '8D7A24B169717907DDA8399D8C1655DF': // strife1.wad map15 - Fortress: Administration
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 2 because there are proper player starts already
			SetThingEdNum(15, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 2);
			SetThingArgument(3, 0, 2);
			SetThingArgument(4, 0, 2);
			SetThingArgument(5, 0, 2);

			// Move the player starts
			SetThingXY(0, 3936, -3480);
			SetThingXY(3, 3988, -3438);
			SetThingXY(4, 3934, -3440);
			SetThingXY(5, 393, -3434);

			//===========================================================================
			//
			// Setup Coop-Friendly Player Starts
			//
			//===========================================================================

			t = 0;

			// Fortress: Security Complex teleporter entrance
			// (Teleport New Map Spot 1)
			SetThingEdNum(2, 0);
			t = AddThing(1, (4448, -3040, 0), 180); SetThingArgument(t, 0, 1);
			t = AddThing(2, (4363, -3039, 0), 180); SetThingArgument(t, 0, 1);
			t = AddThing(3, (4369, -3090, 0), 180); SetThingArgument(t, 0, 1);
			t = AddThing(4, (4365, -2993, 0), 180); SetThingArgument(t, 0, 1);

			break;

		case 'E3E6ABE44B1C034F19385AD1B19BEC97': // strife1.wad map16 - Fortress: Bishop's Tower
			//===========================================================================
			//
			// Fix Bad Player Starts
			//
			//===========================================================================

			// Remove Teleport New Map Spot 1 because there are proper player starts already
			SetThingEdNum(1, 0);

			// Existing player starts need to be given the proper args
			SetThingArgument(0, 0, 1);
			SetThingArgument(93, 0, 1);
			SetThingArgument(90, 0, 1);
			SetThingArgument(91, 0, 1);

			// Move the player starts
			SetThingXY(0, 640, 488);
			SetThingXY(93, 600, 456);
			SetThingXY(90, 680, 456);
			SetThingXY(91, 640, 448);

			// Make the player starts all face north
			SetThingAngle(0, 90);
			SetThingAngle(93, 90);
			SetThingAngle(90, 90);
			SetThingAngle(91, 90);

			// Remove useless player 5 - 8 starts LOL
			SetThingEdNum(105, 0);
			SetThingEdNum(106, 0);
			SetThingEdNum(107, 0);
			SetThingEdNum(108, 0);

			break;

		case 'F61264F1BCEC279E03BEF14CC45D98AB': // strife1.wad map17 - Fortress: The Bailey
			break;

		case 'E6D6F6266DCB70D2792006D740F43473': // strife1.wad map18 - Fortress: Stores
			break;

		case '1240E48EE30E52D7742DC3785BC0C919': // strife1.wad map19 - Fortress: Security Complex
			break;

		case 'D8B1AB710958A1205098FE224B9189DE': // strife1.wad map20 - Factory: Receiving
			break;

		case 'D5FD90FA7A8133E7BFED682D3D313962': // strife1.wad map21 - Factory: Manufacturing
			break;

		case '088F331310F54154443B15EE81AF8BFD': // strife1.wad map22 - Factory: Forge
			break;

		case '777F7085371D7020872E10089AADB764': // strife1.wad map23 - Order Commons
			break;

		case '935024573889AB8CD873A17B21041857': // strife1.wad map24 - Factory: Conversion Chapel
			break;

		case '08A5B44623FFF504462EDC1CA36B1997': // strife1.wad map25 - Catacombs: Ruined Temple
			break;

		case '85D7183042B90FCC7CCC820FE2FA7B77': // strife1.wad map26 - Proving Grounds
			break;

		case 'BAF651138A21FB03AB920FA626F6E64D': // strife1.wad map27 - The Lab
			break;

		case '840DE1C6C218D9C367E930C89EBDC40A': // strife1.wad map28 - Alien Ship
			break;

		case '775CBC35C0A58326FE87AAD638FF9E2A': // strife1.wad map29 - Entity's Lair
			break;

		case '252AF75417C87B680AD2CA48E52DC716': // strife1.wad map30 - Abandoned Front Base
			break;

		case 'BA63176C687188C5C847306B3F516D3A': // strife1.wad map31 - Training Facility
			break;

		case 'BB98350389778448D05D2C45E9EE5061': // strife1.wad map32 - Sanctuary (demo version)
			break;

		case '8E2AA70FBF70C9C68A39A7B0A45480AD': // strife1.wad map33 - Town (demo version)
			break;

		case 'B8B1BFA787E35850EAA95430B0713B88': // strife1.wad map34 - Movement Base (demo version)
			break;
		}
	}

	//===========================================================================
	//
	// Map-Specific Fixes - Strife: Veteran Edition
	//
	//===========================================================================

	void FixMapStuffVE(Name checksum, String mapname)
	{
		int t;

		switch (checksum)
		{
		default:
		case 'none':
			return;

		case 'E80503C91F1304142FFDF51EEA7A9653': // sve.wad map01 - Sanctuary
			break;

		case 'A4ABA612A8FE682787DEBEAF70637836': // sve.wad map02 - Town
			break;

		case '53C6581CB9BC334D6FF0B2E7DAA16944': // sve.wad map03 - Front Base
			break;

		case '4BA20A2DAE4D52196E6B06B142EAE9EB': // sve.wad map04 - Power Station
			break;

		case 'F46DEB7B2ABEDB9677269B1539F7ABB8': // sve.wad map05 - Prison
			break;

		case '3F2BC1BA58B80E4CDF1DB031CA454F79': // sve.wad map06 - Sewers
			break;

		case 'ECB3421D4C79C67EBC9342E0579F8804': // sve.wad map07 - Castle
			break;

		case '5ED7AE938A486878E87690A436E451FB': // sve.wad map08 - Audience Chamber
			break;

		case '6CEEF63FBBE4459BA8A0E73DF308E196': // sve.wad map09 - Castle: Programmer's Keep
			break;

		case '0A9721C0CF54FF6224FE7D326A2B9B85': // sve.wad map10 - New Front Base
			break;

		case '1097B8706E00273294389D1FEB5E94A5': // sve.wad map11 - Borderlands
			break;

		case 'C40C878D00E0BC8F7CF3D08DBDDBC36A': // sve.wad map12 - The Temple of the Oracle
			break;

		case '9AD30A0C668A0106AA827E7F716295E8': // sve.wad map13 - Catacombs
			break;

		case 'B60C0A9027557B2B982EAE60940ED95F': // sve.wad map14 - Mines
			break;

		case '6F9569FFFF0C1405DC04385CDB3436E6': // sve.wad map15 - Fortress: Administration
			break;

		case '900B1CAC3AB7DF6C2FFB5C429C523FB7': // sve.wad map16 - Fortress: Bishop's Tower
			break;

		case '8317A4026000931CAC5CB185582B4EDC': // sve.wad map17 - Fortress: The Bailey
			break;

		case '936649C98740996C05BE961AA9058A67': // sve.wad map18 - Fortress: Stores
			break;

		case '5215723CBF14B74A0CB901473434576B': // sve.wad map19 - Fortress: Security Complex
			break;

		case 'C6BFC4A41F739A30A4AC09DEE895DCE3': // sve.wad map20 - Factory: Receiving
			break;

		case 'B368A6D674B81B650DC37C8643BC9AA4': // sve.wad map21 - Factory: Manufacturing
			break;

		case '07B8629DEAE50991B3B372911EDC99D3': // sve.wad map22 - Factory: Forge
			break;

		case '13BDF7D41E33E302D21234316A600BBA': // sve.wad map23 - Order Commons
			break;

		case 'A1306ABECD39680421808E3FEE89A58E': // sve.wad map24 - Factory: Conversion Chapel
			break;

		case 'A35CD1D869B0473249E7F23FA925517A': // sve.wad map25 - Catacombs: Ruined Temple
			break;

		case '27F31A6F186F2C928EF6E5450D1B891D': // sve.wad map26 - Proving Grounds
			break;

		case '455893D08E0AF4C0A8D50FE8A4B865A3': // sve.wad map27 - The Lab
			break;

		case '43320A6C4547B8D4A5F3BAD28B00EA25': // sve.wad map28 - Alien Ship
			break;

		case 'A75099ACB622C7013EE737480FCB0D67': // sve.wad map29 - Entity's Lair
			break;

		case 'C45DCE904B6D4F9AC76B025499D9281E': // sve.wad map30 - Abandoned Front Base
			break;

		case 'F023F94C61827861776C63288BB93649': // sve.wad map31 - Training Facility
			break;

		case 'F8E6B612A87A052F3FA298DBD792E269': // sve.wad map32 - Sanctuary (demo version)
			break;

		case 'F307864E6E8114454F3FD9C0699F28D2': // sve.wad map33 - Town (demo version)
			break;

		case 'C53801BD1C6EAC80C2DCDDBF2DBDF980': // sve.wad map34 - Movement Base (demo version)
			break;

		case 'F78F92E830CF340E6D2277E8D5D74081': // sve.wad map35 - Factory: Production (super secret level)
			break;

		case 'A906E617E2032090BD71A936F9DB016E': // sve.wad map36 - Castle Clash (Capture the Chalice)
			break;

		case '51A68D41E73CCB8EDC70A939AC01C6F5': // sve.wad map37 - Killing Grounds (Capture the Chalice)
			break;

		case 'DD84AED7C0AA55BE10090399486AC3F8': // sve.wad map38 - Ordered Chaos (Capture the Chalice)
			break;
		}
	}
}
